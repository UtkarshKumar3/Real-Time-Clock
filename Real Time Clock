#include <RTClib.h>

RTC_DS3231 rtc;
#define de 1000
int menu=0,set_hour=0,set_hour_out=0,set_min_out=0,set_toggle=0,set_hr=0,set_min=0,set_sec=0,flag_menu=0;
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0X27,16,2);

char daysOfTheWeek[7][12] = {
  "Sunday",
  "Monday",
  "Tuesday",
  "Wednesday",
  "Thursday",
  "Friday",
  "Saturday"
};

#define set_hr 2

void setup () {
  Serial.begin(9600);
lcd.init();
  lcd.backlight();
  // SETUP RTC MODULE
  if (! rtc.begin()) {
    Serial.println("Couldn't find RTC");
    Serial.flush();
    while (1);
  }

  // automatically sets the RTC to the date & time on PC this sketch was compiled
  rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));
   pinMode(2,INPUT);
   pinMode(4,INPUT);
   pinMode(7,INPUT);
   pinMode(8,OUTPUT);

  // manually sets the RTC with an explicit date & time, for example to set
  // January 21, 2021 at 3am you would call:
  // rtc.adjust(DateTime(2021, 1, 21, 3, 0, 0));
}
void seti(){
 
}
void loop () {
  DateTime now = rtc.now();
  if(!digitalRead(2)) flag_menu=!flag_menu;
  if(flag_menu==0){
    
    lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("Date:");
  lcd.print(now.year(), DEC);
  lcd.print('/');
  lcd.print(now.month(), DEC);
  lcd.print('/');
  lcd.print(now.day(), DEC);
  lcd.setCursor(0,1);
  lcd.print("Time: ");
  lcd.print(now.hour(), DEC);
  lcd.print(':');
  lcd.print(now.minute(), DEC);
  lcd.print(':');
  lcd.print(now.second(), DEC);
  int f=0;
  Serial.println(now.hour());
  Serial.println(now.minute());
  Serial.println(set_hour);
  Serial.println(set_min);
  Serial.println(set_hour_out);
  Serial.println(set_min_out);

  if(now.hour()*60+now.minute()>=set_hour*60+set_min && now.hour()*60+now.minute()<=set_hour_out*60+set_min_out) {lcd.clear(); lcd.print("ON"); 
   digitalWrite(8,HIGH);
    delay(2000);}
  while(now.hour()*60+now.minute()>=set_hour*60+set_min && now.hour()*60+now.minute()<=set_hour_out*60+set_min_out){
    now=rtc.now();
        lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("Date:");
  lcd.print(now.year(), DEC);
  lcd.print('/');
  lcd.print(now.month(), DEC);
  lcd.print('/');
  lcd.print(now.day(), DEC);
  lcd.setCursor(0,1);
  lcd.print("Time: ");
  lcd.print(now.hour(), DEC);
  lcd.print(':');
  lcd.print(now.minute(), DEC);
  lcd.print(':');
  lcd.print(now.second(), DEC);
   f=1;
   delay(1000);
  }
  if(f==1) {lcd.clear(); lcd.print("OFF");
  digitalWrite(8,LOW);
  delay(2000);}
  }
  else{
   set_hour=now.hour();
  set_min=now.minute();
  set_hour_out=now.hour();
  set_min_out=now.minute();
    lcd.clear(); delay(de);int k,l;
    while(flag_menu){
      delay(de);
      k=!digitalRead(4);
      l=!digitalRead(7);
      if(k&&set_toggle==0) set_hour=(set_hour+1)%24;
      else if(k&&set_toggle==1) set_min=(set_min+1)%60;
      else if(k&&set_toggle==2) set_hour_out=(set_hour_out+1)%60;
      else if(k&&set_toggle==3) set_min_out=(set_min_out+1)%60;

      if(l==1&&k==0) set_toggle=(set_toggle+1)%5;
        Serial.print(set_toggle);
  Serial.print(l);
  Serial.println(k);
      if(set_toggle==4){flag_menu=0;set_toggle=0;break;}
      lcd.setCursor(0,0);
  if(set_toggle==0)lcd.print("TimeIn(H):");
  if(set_toggle==1)lcd.print("TimeIn(M):");
  if(set_toggle==2)lcd.print("TimeOut(H):");
  if(set_toggle==3)lcd.print("TimeOut(M):");

  if(set_toggle==0||set_toggle==1)lcd.print(set_hour);
  else if(set_toggle==2||set_toggle==3)lcd.print(set_hour_out);
  lcd.print(':');
  if(set_toggle==0||set_toggle==1)lcd.print(set_min);
  else if(set_toggle==2||set_toggle==3)lcd.print(set_min_out);
  //lcd.clear();
    }
    lcd.clear();

  }
  
delay(de);
 // delay 1 seconds
}
